import os
import logging
from dotenv import load_dotenv
from telegram import Update
from telegram.ext import Application, CommandHandler, ContextTypes, MessageHandler, filters

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)

# –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã
BOT_TOKEN = os.getenv('BOT_TOKEN')
ADMIN_ID = int(os.getenv('ADMIN_ID'))
TARGET_GROUP_ID = int(os.getenv('TARGET_GROUP_ID'))

async def new10topics(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–°–æ–∑–¥–∞–µ—Ç 10 —Ç–µ–º –≤ —Ü–µ–ª–µ–≤–æ–π –≥—Ä—É–ø–ø–µ"""
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫–æ–º–∞–Ω–¥–∞ –æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    if update.effective_user.id != ADMIN_ID:
        return
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫–æ–º–∞–Ω–¥–∞ –∏–∑ —Ü–µ–ª–µ–≤–æ–π –≥—Ä—É–ø–ø—ã
    if update.effective_chat.id != TARGET_GROUP_ID:
        return
        
    try:
        # –°–æ–∑–¥–∞–µ–º 10 —Ç–µ–º
        for i in range(1, 11):
            topic_name = f"–¢–µ–º–∞ {i}"
            await context.bot.create_forum_topic(
                chat_id=TARGET_GROUP_ID,
                name=topic_name
            )
        
        await update.message.reply_text("‚úÖ –£—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–æ 10 –Ω–æ–≤—ã—Ö —Ç–µ–º!")
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Ç–µ–º: {e}")
        await update.message.reply_text("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Ç–µ–º")

async def get_ids(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –≥—Ä—É–ø–ø—ã –∏ —Ç–µ–º—ã"""
    
    if update.effective_user.id != ADMIN_ID:
        return
        
    user_id = update.effective_user.id
    chat_id = update.effective_chat.id
    message_thread_id = update.effective_message.message_thread_id if update.effective_message.is_topic_message else None
    
    response = f"üë§ User ID: `{user_id}`\nüí≠ Chat ID: `{chat_id}`"
    if message_thread_id:
        response += f"\nüìå Topic ID: `{message_thread_id}`"
    
    await update.message.reply_text(response, parse_mode='Markdown')

def main() -> None:
    """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞"""
    # –°–æ–∑–¥–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    application = Application.builder().token(BOT_TOKEN).build()

    # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥
    application.add_handler(CommandHandler("new10topics", new10topics))
    application.add_handler(CommandHandler("ids", get_ids))

    # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
    application.run_polling(allowed_updates=Update.ALL_TYPES)

if __name__ == '__main__':
    main() 